/*
========================================================================================
    Nextflow config file for running minimal tests
========================================================================================
    Defines input files and everything required to run a fast and simple pipeline test.
    Use as follows:
        nextflow run genepi/nf-gwas -r <tag> -profile test,<docker/singularity>
----------------------------------------------------------------------------------------
*/

params {
    project                       = 'test-gwas'
    genotypes_prediction          = "$baseDir/tests/input/pipeline/example.{bim,bed,fam}"
    genotypes_association         = "$baseDir/tests/input/pipeline/example.bgen"
    genotypes_build               = 'hg19'
    genotypes_association_format  = 'bgen'
    phenotypes_filename           = "$baseDir/tests/input/pipeline/phenotype.txt"
    phenotypes_columns            = 'Y1,Y2'
    phenotypes_binary_trait       = false
    regenie_test                  = 'additive'
    annotation_min_log10p         = 2
    rsids_filename                = "$baseDir/tests/input/pipeline/rsids.tsv.gz"
}

process {

  withName: 'VALIDATE_PHENOTYPES' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'VALIDATE_COVARIATES' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'CHUNK_ASSOCIATION_FILES' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'COMBINE_MANIFEST_FILES' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'QC_FILTER_GENOTYPED' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'PRUNE_GENOTYPED' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'IMPUTED_TO_PLINK2' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REGENIE_STEP1' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REGENIE_STEP1_SPLIT' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REGENIE_STEP1_RUN_CHUNK' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REGENIE_STEP1_MERGE_CHUNKS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REGENIE_STEP2' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REGENIE_STEP2_GENE_TESTS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REGENIE_LOG_PARSER_STEP1' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REGENIE_LOG_PARSER_STEP2' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'DOWNLOAD_RSIDS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'ANNOTATE_RESULTS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'FILTER_RESULTS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'MERGE_RESULTS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'LIFTOVER_RESULTS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REPORT' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REPORT_GENE_BASED_TESTS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }

  withName: 'REPORT_INDEX' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  
  errorStrategy = 'retry'
  maxRetries = 3
}



