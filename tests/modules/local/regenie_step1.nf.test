nextflow_process {

    name "Test Process REGENIE_STEP1"
    script "modules/local/regenie/regenie_step1_run.nf"
    process "REGENIE_STEP1_RUN"

    test("Should execute regenie step 1 for 2 phenotypes ") {

        when {
            params {
                // set required phenotypes_column
                phenotypes_columns = 'Y1,Y2'
            }
            process {
                """
                input[0] = Channel.fromFilePairs("$projectDir/tests/input/regenie_step1/example.qc.{bim,bed,fam}", size: 3, flat:true)
                input[1] = file("$projectDir/tests/input/regenie_step1/example.qc.snplist")
                input[2] = file("$projectDir/tests/input/regenie_step1/example.qc.id")
                input[3] = file("$projectDir/tests/input/pipeline/phenotype.txt")
                input[4] = []
                input[5] = []
                """
            }
        }

        then {
            assert process.success
           
            with(process.out) {
                with(regenie_step1_out.get(0)){
                    assert snapshot(get(1),get(2)).match()
                    assert size() == 4
                    // pred list includes 2 loco files
                    assert path(get(3)).readLines(), 2
                    // parse log file
                    assert path(get(0)).text.contains("--step 1")
                    assert path(get(0)).text.contains("--keep example.qc.id")
                    assert path(get(0)).text.contains("--phenoFile phenotype.txt")
                    assert path(get(0)).text.contains("--phenoColList Y1,Y2")
                }
            }
        }

    }

}
